{"version":3,"sources":["components/Utils.tsx","components/RepoPageFields.tsx","types/index.ts","components/RepoPageMethods.tsx","components/RepoModuleElements.tsx","components/RepoPageElements.tsx","components/Commands.tsx","components/RepoSidebar.tsx","components/HelpContent.tsx","components/HelpSidebar.tsx","components/useHelpRepository.ts","components/Footer.tsx","components/Message.tsx","components/CodeEditor.tsx","components/App.tsx","index.tsx"],"names":["DragElement","evt","dragstring","_document$getElementB","dragdiv","document","createElement","className","style","width","id","txt","createTextNode","appendChild","obj","getElementById","innerHTML","dataTransfer","setDragImage","effectAllowed","setData","concat","RepoPageFields","_ref","pagename","fieldlist","_jsx","_Fragment","children","Object","keys","map","key","idx","draggable","onDragStart","e","currentTarget","dataset","codeline","typecolor","webelement","button","label","link","textbox","checkbox","combobox","listbox","radiogroup","webtable","date","typealias","controldefaultcommand","RepoPageMethods","modulename","methodlist","renderCodeline","method","arglist","assign","arguments","arg","push","name","type","toLowerCase","join","_jsxs","substr","RepoModuleElements","pageelement","module","elem","defaultcommand","backgroundColor","elements","element","methods","RepoPageElements","elementlist","modulelist","setSelectedModule","_useState","useState","_useState2","_slicedToArray","expandedElement","setExpandedElement","onAccordionChange","target","HTMLAnchorElement","HTMLElement","_e$target$dataset","_e$target$dataset2","elementid","moduletype","tooltip","elemarr","split","trim","elemname","elemtype","undefined","mod","find","m","onClick","renderElement","Commands","commandlist","setSelectedElement","pageid","RepoSidebar","repo","expandedPage","setExpandedPage","HTMLDivElement","_e$currentTarget$data","pagearr","commands","pages","page","fields","modules","HelpContent","content","setContent","useEffect","_repo$find","_repo$find$elements$f","group","groupname","ReactMarkdown","HelpSidebar","selectedPage","selectedElement","helprepository","initvalue","setRepo","temprepo","axios","get","then","response","data","gname","m1","match","elemlist","m2","useHelpRepository","_helprepository$find","display","overflow","height","marginBottom","value","onChange","required","disabled","gr","gridx","elemidx","Footer","baseurl","color","typelist","Message","_ref$type","_ref$text","text","setMessage","CodeEditor","blocklist","code","setCode","_useState3","_useState4","ce","setCE","_useState5","_useState6","message","blockoptions","toUpperCase","insertCodeBlock","command","bname","block","setValue","setCursor","line","ch","setTimeout","replaceRange","getCursor","actionScriptPane","action","execCommand","pattern","RegExp","matches","getSearchCursor","findNext","markText","from","to","range","selection","getSelection","indentLine","length","indentSelection","marginLeft","marginTop","alignItems","CodeMirror","editorDidMount","editor","options","mode","theme","autofocus","lineNumbers","lineWrapping","dragDrop","showCursorWhenSelecting","onBeforeChange","onDrop","newline","getData","focus","coordsChar","left","pageX","top","pageY","remove","onDragOver","preventDefault","autoScroll","App","_React$useState","React","_React$useState2","selectedRepo","setSelectedRepo","repository","setRepository","selectedRepoElement","setSelectedRepoElement","repoOptionList","opt","src","alt","reponame","jsonresponse","headers","blocks","xml","DOMParser","parseFromString","getElementsByTagName","Array","b","textContent","c","updatedRepository","_objectSpread","basic","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a1bbc9a.chunk.js","sourcesContent":["\nexport function DragElement (evt:React.DragEvent<HTMLDivElement|HTMLAnchorElement>, dragstring:string|undefined){\n    if(dragstring){\n        let dragdiv = document.createElement('label')\n        dragdiv.className=\"ui gray label\"\n        dragdiv.style.width=\"max-content\"\n        dragdiv.id=\"draggedobj\"\n        //let dragico = document.createElement('i')\n        //dragico.className=\"icon angle right\"\n        let txt = document.createTextNode(dragstring)\n        \n        //dragdiv.appendChild(dragico)\n        dragdiv.appendChild(txt)\n        let obj=document.getElementById(\"dragcontainer\")\n        if(obj) obj.innerHTML=\"\"\n        document.getElementById(\"dragcontainer\")?.appendChild(dragdiv)\n        \n        evt.dataTransfer.setDragImage(dragdiv, -50,20)\n        evt.dataTransfer.effectAllowed='all'\n        evt.dataTransfer.setData('codezeile', `${dragstring} \\n\\t`)\n    }\n}\n\n","import React from \"react\";\nimport { RepoDictType } from \"../types\";\nimport {DragElement} from './Utils'\n\ntype CompProps = {\n  pagename:string\n  fieldlist: [RepoDictType];\n};\nconst RepoPageFields: React.FC<CompProps> = ({ pagename, fieldlist }) => {\n\n  return (\n    <>\n    {\n      Object.keys(fieldlist).map((key, idx)=>{\n        return(\n          <div className=\"item borderless\" draggable=\"true\" key={idx} data-codeline={`b.at ${pagename}`} onDragStart={(e: React.DragEvent<HTMLDivElement>) =>{DragElement(e, e.currentTarget.dataset.codeline)}}>\n            <div data-tooltip={fieldlist[key]}>{key}</div>\n          </div>\n        )})\n    } \n    </>\n  )\n};\nexport default RepoPageFields;\n","\n\nexport type RepoDictType={[key:string]:string}\ntype dicttype = { [key: string]: string };\n\nexport type RepositoryType={\n    basic:[RepoDictType],\n    blocks?:[RepoDictType]\n    commands:[RepoDictType]\n    controls:[RepoControlType],\n    pages:[RepoPageType],\n    modules:[RepoModuleType]\n}\n\nexport type RepoElementType={\n  name:string,\n  type:string,\n  help?:string\n}\nexport type RepoMethodType={\n  name:string,\n  arguments:[RepoElementType],\n  returnvalue?: void|string|number|null,\n  help?:string\n}\n\n//Textbox, Button, Listbox, Combobox, Checkbox, RadioGroup, Label, WebTable WebElement...\nexport type RepoControlType={\n  name:string,\n  elements:[RepoElementType],\n  methods:[RepoMethodType],\n  help?:string\n}\n\n//Popup, Filterbereich, SucheForm, TabHistorie\nexport type RepoModuleType={\n  name:string,\n  elements:[RepoElementType],\n  methods:[RepoMethodType],\n  help?:string\n}\n\n//LoginPage, StartPage, PostfachPage ContractListPage, NewContractPage...\nexport type RepoPageType={\n  name:string,\n  fields:[RepoDictType],\n  elements:[RepoElementType],\n  methods:[RepoMethodType],\n  help?:string\n}\n\nexport type HelpRepoType = {\n  groupname: string;\n  elements: [\n    {\n      name: string;\n      content: string;\n    }\n  ];\n}\n\n\nexport const typecolor: dicttype = {\n  webelement: \"orange\",\n  button: \"yellow\",\n  label: \"olive\",\n  link: \"green\",\n  textbox: \"teal\",\n  checkbox: \"blue\",\n  combobox: \"violet\",\n  listbox: \"purple\",\n  radiogroup: \"pink\",\n  webtable: \"brown\",\n  date: \"grey\",\n}\nexport const typealias: dicttype = {\n  webelement: \"elem\",\n  button: \"btn\",\n  label: \"lbl\",\n  link: \"lnk\",\n  textbox: \"txt\",\n  checkbox: \"chk\",\n  combobox: \"cmb\",\n  listbox: \"lib\",\n  radiogroup: \"rgb\",\n  webtable: \"tbl\",\n  date: \"date\",\n}\n\nexport const controldefaultcommand: dicttype = {\n  webelement: \"click()\",\n  button: \"click\",\n  label: \"get()\",\n  link: \"click()\",\n  textbox: \"set(term)\",\n  checkbox: \"set()\",\n  combobox: \"select(term)\",\n  listbox: \"select(term)\",\n  radiogroup: \"set(term)\",\n  webtable: \"getCellData(rownr,colnr)\",\n  date: \"set(term)\",\n}\n\n\n\n\n","\nimport React from 'react'\nimport { RepoMethodType } from '../types'\nimport { DragElement}from './Utils'\n\ntype CompProps={\n    methodlist:[RepoMethodType]\n    modulename?:string\n}\nconst RepoPageMethods:React.FC<CompProps>=({modulename, methodlist})=>{\n\n    const renderCodeline =(method:RepoMethodType)=>{\n        let arglist:[string]=Object.assign([])\n        if(method.arguments){\n            method.arguments.map((arg)=>{\n                return arglist.push(`${arg.name}:${arg.type.toLowerCase()}`)\n             })\n             if(arglist){\n              if(modulename){\n                return `b.${modulename}.${method.name}(${arglist.join(', ')})` \n              }\n              return `b.${method.name}(${arglist.join(', ')})` \n             }    \n        }\n        else{\n          if(modulename){\n            return `b.${modulename}.${method.name}()`\n          }\n          return `b.${method.name}()`\n        }\n        \n    }\n\n    \n\n    return (\n      <div className=\"item borderless\">\n        {methodlist.map((method, idx) => {\n          return (\n            <div className=\"item\" key={idx} draggable=\"true\" data-codeline={renderCodeline(method)} onDragStart={(e:React.DragEvent<HTMLDivElement>)=>{DragElement(e, e.currentTarget.dataset.codeline)}} >\n                <div className={`ui tial circular inverted right label`}>M</div>\n                <div data-tooltip={renderCodeline(method)}>{method.name.substr(0, 15)}</div>\n            </div>\n            )\n            })\n        }\n      </div>\n    )\n}\n\nexport default RepoPageMethods","import React from \"react\";\nimport { RepoElementType, RepoModuleType, typealias, typecolor, controldefaultcommand } from \"../types\";\nimport RepoPageMethods from './RepoPageMethods'\nimport {DragElement} from './Utils'\n\nconst RepoModuleElements:React.FC<{pageelement:string, module:RepoModuleType}> = ({pageelement,module}) => {\n  \n  \n  const renderCodeline=(elem:RepoElementType):string=>{\n    if(elem.type && elem.name){\n      let defaultcommand = controldefaultcommand[elem.type]?`.${controldefaultcommand[elem.type]}`:\"\"\n      return `b.${pageelement}.${elem.name}${defaultcommand}`   \n    }\n    return \"\"\n  }\n\n  return (\n    <div className=\"item\" style={{backgroundColor:'lightyellow'}}>\n        <div className=\"ui horizontal divider\">Elemente</div>\n        {\n          module?.elements.map((element, idx) => {\n            return (\n            <div className=\"item borderless\" key={idx} draggable=\"true\" data-codeline={renderCodeline(element)} onDragStart={(e:React.DragEvent<HTMLDivElement>)=>{DragElement(e,e.currentTarget.dataset.codeline)}}>\n                <div className={`ui ${typecolor[element.type.toLowerCase()]} circular inverted right label`}> {typealias[element.type.toLowerCase()]} </div>\n                <div>{element.name.substr(0, 15)}</div>\n            </div>\n            )\n            }\n          )\n        }\n        <div className=\"ui divider horizontal\">Methoden</div>\n        <RepoPageMethods modulename={pageelement} methodlist={module.methods}  />\n        \n    </div>\n  )\n}\n\nexport default RepoModuleElements;\n","import React, {useState} from 'react'\nimport { RepoElementType, RepoModuleType, typecolor, typealias, controldefaultcommand } from '../types'\nimport RepoModuleElements from './RepoModuleElements'\nimport {DragElement} from './Utils'\n\ntype CompProps={\n    elementlist:[RepoElementType]\n    modulelist?:[RepoModuleType]\n    setSelectedModule:Function\n}\nconst RepoPageElements:React.FC<CompProps>=({elementlist, modulelist, setSelectedModule})=>{\n    const[expandedElement, setExpandedElement]=useState(\"\")\n\n    //Expandiert oder schließt die auflistung mit module elementen und methoden\n    const onAccordionChange = (e:React.MouseEvent<HTMLDivElement>) =>{\n        if(e.target instanceof HTMLAnchorElement ||e.target instanceof HTMLElement){\n            let elementid = e.target.dataset?.elementid\n            let moduletype= e.target.dataset?.tooltip\n            if(elementid){\n              let elemarr = elementid.split('#')\n              //Nur elemente mit dem Attribute data-pageid dürfen für expand unexpand verwendet werden.\n              if(expandedElement===elemarr[1].trim()){\n                //zum schließen des accordions\n                setExpandedElement('default')\n              }else{\n                //zum öffnen des accordions\n                setSelectedModule(`module#${moduletype}`)\n                setExpandedElement(elemarr[1]?elemarr[1].trim():'default')\n              }\n            }\n        }\n    } \n\n   \n\n    const renderCodeline=(elem:RepoElementType):string=>{\n      if(elem.type && elem.name){\n        let defaultcommand = controldefaultcommand[elem.type]?`.${controldefaultcommand[elem.type]}`:\"\"\n        return `${elem.name}${defaultcommand}`   \n      }\n      return \"\"\n    }\n\n\n    const renderElement=(elem:RepoElementType, idx:number)=>{\n        let elemname=elem.name\n        let elemtype=elem.type.toLowerCase()\n        if(typealias[elemtype]=== undefined){\n            //Das element hat als type ein Module\n            let mod:RepoModuleType|undefined = modulelist?.find(m=>m.name.toLowerCase()===elemtype)\n            if(mod !==undefined){\n                return (\n                    //----------------------Module-------------------------------------\n                    <div key={idx}>\n                      <div className=\"item\" data-tooltip={elem.type} data-elementid={`modules#${elemname}`}  onClick={onAccordionChange} >\n                        <i className=\"ui dropdown icon\" data-elementid={elemname}></i>\n                        {elemname.substr(0, 15)}\n                      </div>\n                      <div className={`${ expandedElement !== elemname ? \"displaynone\" : \"\" }`} >\n                        <RepoModuleElements pageelement={elem.name} module={mod} />\n                      </div>\n                    </div>\n                  )\n            }\n        }else{\n            //--------------------------Page Elemente----------------------------------\n            return (\n                <div draggable=\"true\" data-codeline={renderCodeline(elem)} onDragStart={(e:React.DragEvent<HTMLDivElement>)=>{DragElement(e,e.currentTarget.dataset.codeline)}} className=\"item borderless\" key={idx}>\n                    <div className={`ui ${typecolor[elemtype]} circular inverted label`}>{typealias[elemtype]}</div>\n                    <div>{elemname.substr(0, 15)}</div>\n                </div>\n            )\n        }\n    }\n\n    return (\n      <>\n        {elementlist.map((element: RepoElementType, idx: number) => {\n          return renderElement(element, idx);\n        })}\n      </>\n    );\n}\nexport default RepoPageElements","import React from \"react\";\nimport { RepoDictType } from \"../types\";\nimport {DragElement} from './Utils'\n\ntype CompProps = {\n  commandlist: [RepoDictType];\n  setSelectedElement:Function;\n};\nconst Commands: React.FC<CompProps> = ({ commandlist , setSelectedElement}) => {\n\n  return (\n    <>\n    {\n      Object.keys(commandlist).map((key, idx)=>{\n        return(\n          <div className=\"item borderless\" draggable=\"true\" key={idx} data-codeline={`\\t\\t${commandlist[key]}`} data-pageid={`commands#${key}`} onClick={(e)=>setSelectedElement(e.currentTarget.dataset.pageid)}  onDragStart={(e: React.DragEvent<HTMLDivElement>) =>{DragElement(e, e.currentTarget.dataset.codeline)}}>\n            <div data-tooltip={commandlist[key]}>{key}</div>\n          </div>\n        )})\n    } \n    </>\n  )\n};\nexport default Commands;","import React, {useState} from \"react\";\nimport {RepositoryType} from '../types'\nimport RepoPageFields from './RepoPageFields'\nimport RepoPageElements from './RepoPageElements'\nimport RepoPageMethods from './RepoPageMethods'\nimport Commands from './Commands'\n\ntype CompProps={\n  repo:RepositoryType\n  setSelectedElement:Function\n}\n\nconst RepoSidebar: React.FC<CompProps> = ({repo, setSelectedElement}) => {\n\n    const[expandedPage, setExpandedPage]=useState(\"\")\n\n   //Expandiert oder schließt die auflistung mit seiten elementen und methoden\n   const onAccordionChange = (e: React.MouseEvent<HTMLDivElement|HTMLAnchorElement>) => {\n     if (e.target instanceof HTMLAnchorElement || e.target instanceof HTMLDivElement) {\n       let pageid = e.currentTarget.dataset?.pageid;\n       if (pageid) {\n         let pagearr = pageid.split('#')\n         //Nur elemente mit dem Attribute data-pageid dürfen für expand unexpand verwendet werden.\n         if (expandedPage === pagearr[1].trim()) {\n           //zum schließen des accordions\n           setExpandedPage(\"default\");\n         } else {\n           //zum öffnen des accordions\n           setSelectedElement(pageid);\n           setExpandedPage(pagearr[1] ? pagearr[1].trim() : \"default\");\n         }\n       }\n     }\n   }; \n\n  return (\n    <>\n      <div className=\"ui item\">\n        <div className=\"accordion\">\n          <div className=\"item title\" data-pageid=\"commands#utils\" onClick={onAccordionChange} > <i className=\"ui caret down icon\"></i> Commands/Utils </div>\n          <div className=\"content\">\n            <div className={`${expandedPage !== \"utils\" ? \"displaynone\" : \"\"}`}>\n              <Commands commandlist={repo.commands} setSelectedElement={setSelectedElement} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"ui item\">\n        <div className=\"ui horizontal divider\">Object Repository</div>\n        <div className=\"ui vertical\">\n          {repo.pages.map((page, idx) => {\n            return (\n              <div className=\"accordion\" key={idx}>\n                <div className=\"item title\" data-pageid={`pages#${page.name}`} onClick={onAccordionChange} >\n                  <i className=\"ui dropdown icon\"></i>\n                  {page.name}\n                </div>\n                <div className={`${ expandedPage !== page.name ? \"displaynone\" : \"\" }`} style={{ backgroundColor: \"aliceblue\" }} >\n                  <div className=\"ui horizontal divider\">Fields</div>\n                  <RepoPageFields pagename={page.name} fieldlist={page.fields} />\n                  <div className=\"ui horizontal divider\">Elements</div>\n                  <RepoPageElements elementlist={page.elements} modulelist={repo.modules} setSelectedModule={setSelectedElement} />\n                  <div className=\"ui horizontal divider\">Methods</div>\n                  <RepoPageMethods methodlist={page.methods} />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RepoSidebar; ","import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { HelpRepoType } from '../types'\n\ntype CompProps={\n    repo:[HelpRepoType]|string\n    element:string\n}\nconst HelpContent:React.FC<CompProps>=({repo, element})=>{\n    const[content, setContent]=useState(\"\")\n    useEffect(()=>{\n        let content:string|undefined\n        if(repo && typeof(repo) !=='string'){\n            let elemarr: string[] = element.split('#')\n            //let elements = helprepo.reduce()\n            content= repo.find(group=>group?.groupname.toLowerCase()===elemarr[0].trim())?.elements.find(elem=>elem?.name===elemarr[1].trim())?.content\n            if(content)setContent(content) \n            else{\n                if(element)setContent(`#### Element: ${elemarr[1]} \\n Hilfe nicht gefunden`)\n                else setContent(\"\")\n            }    \n        }\n        else setContent(\"## Help Repository nicht geladen\")\n    },[element, repo])\n    return(\n        <div>\n             <ReactMarkdown children={content} /> \n        </div>\n    )\n}\nexport default HelpContent","\nimport React, {useEffect, useState} from 'react'\nimport HelpContent from './HelpContent'\nimport useHelpRepository from './useHelpRepository'\n\ntype CompProps={\n  selectedPage:string\n}\n\nconst HelpSidebar:React.FC<CompProps>=({selectedPage})=>{\n    const[selectedElement, setSelectedElement]=useState(\"\")\n    const helprepository:[{elements:[{name:string, content:string}], groupname:string}] = useHelpRepository(\"\") \n\n    useEffect(() => {\n      /*  Wenn eine Page ausgewählt wurde zur der kein Help Content existiert wird in der SelectBox die erste Option gesetzt.\n      mit der Vorprüfung kann die Option auf null gesetzt\n      */\n      if(helprepository){\n        let page = helprepository.find(group=>group.groupname==='pages')?.elements.find(element=>`pages#${element.name}`===selectedPage)\n        if(!page) setSelectedElement(\"\")\n        else setSelectedElement(selectedPage)\n      }\n      \n\n    },[selectedPage]);\n\n    return (\n      <>\n      {/*##################### ELEMENTE AUSWAHL ##########################*/}\n      <div className=\"ui vertical menu kw-vmenu\" style={{display:'block', overflow: 'auto', width:'auto', height:'100%', backgroundColor:\"lightgray\", marginBottom:\"0\"}} >\n        <div className=\"item\">\n          <div  className=\"ui horizontal divider\">HELP</div>         \n          <select className=\"ui fluid dropdown\" value={selectedElement} onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSelectedElement(e.currentTarget.value)} required >\n            <option className=\"item active\" key=\"inithelpoption\" value=\"\" disabled>Select Element</option>\n            {\n              helprepository\n              ?helprepository.map((gr,gridx)=>{\n                return (\n                  <>\n                    <option className=\"ui teal label inverted\"  key={gridx} value={gr.groupname} disabled>{gr.groupname}</option> \n                    {\n                      gr.elements.map((elem,elemidx)=>{\n                        return <option className=\"item\" key={`${elem.name}_${elemidx}`} value={`${gr.groupname}#${elem.name}`}>{elem.name}</option>\n                      })\n                    }\n                  </>\n                )\n              })\n              :null\n            }\n          </select>\n        </div>\n        {\n          helprepository\n          ?<HelpContent repo={helprepository} element={selectedElement?selectedElement:selectedPage} />\n          : <div className=\"ui red label\">Help Repository nicht geladen</div>\n        }\n      </div>\n\n      {/*########################   SCREENSHOT ###########################*/}\n      <div className=\"vertical fluid menu\" style={selectedPage?{display:'block'}:{display:'none'}}>\n      <div className=\"item\">\n       <div className=\"ui horizontal divider\">SCREENSHOT</div>\n       <div className=\"ui inverted segment\">\n         <div className=\"ui inverted placeholder\">\n           <div className=\"image header\">\n             <div className=\"line\"></div>\n             <div className=\"line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n         </div>\n         <div className=\"ui inverted placeholder\">\n           <div className=\"image header\">\n             <div className=\"line\"></div>\n             <div className=\"line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n           <div className=\"paragraph\">\n             <div className=\"medium line\"></div>\n             <div className=\"short line\"></div>\n           </div>\n         </div>\n       </div>\n     </div> \n     </div>\n     </>\n    );\n}\n\nexport default HelpSidebar","\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {HelpRepoType} from '../types'\n\nexport default function useHelpRepository(initvalue){\n    const[repo, setRepo]=useState(initvalue)\n\n    useEffect(()=>{\n        let temprepo:[HelpRepoType]=Object.assign([])\n        axios.get(\"./help.md\").then((response) => {\n            if (response.data) {\n                let data:string = response.data\n                data.split(/^#\\s+/gim).map((group)=>{\n                    let gname =\"\"\n                    let m1:RegExpMatchArray|null = group.match(/(^\\w+\\s+)/gim)\n                    if(m1){\n                        gname=m1[0].trim().toLowerCase()\n                        let elemlist:[{name:string, content:string}] = Object.assign([])\n                        group.split(/^##\\s+/gim).map(element=>{\n                            let m2:RegExpMatchArray|null = element.match(/(^\\w+\\s+)/gim)\n                            if(m2 && m1 && m2[0]!==m1[0]){\n                                let elemname = m2[0].trim()\n                                let content = `## ${element}`\n                                elemlist.push({name:elemname, content:content})\n                            }\n                            return null\n                        })\n\n                        if(elemlist && gname){\n                            temprepo.push({groupname:gname, elements:elemlist})\n                        }\n                    }\n                    return null\n                })\n                setRepo(temprepo)\n            }\n        })\n    },[])\n    return repo\n }\n","import React from \"react\";\n\nconst Footer:React.FC<{baseurl:string}> = ({baseurl}) => {\n  return (\n    <footer>\n      <div className=\"ui secondary menu\">\n        <div className=\"item\">\n          <h4 style={{color:\"#83cd20\"}}>\n            BaseUrl:      {baseurl}\n          </h4>\n        </div>\n        {/* <div className=\"item\">\n          <div className=\"ui transparent inverted icon input\">\n            <input type=\"text\" placeholder=\"Search...\"/>\n            <i className=\"icon search\" aria-hidden=\"true\"></i>\n          </div>\n        </div> */}\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\ntype messageType={\n    type:string,\n    text:string\n    setMessage:Function\n}\nconst typelist:{[key:string]:string} ={\n    \"info\":\"green\",\n    \"warn\":\"yellow\",\n    \"error\":\"red\"\n}\nconst Message:React.FC<messageType> = ({type=\"info\", text=\"\", setMessage})=>{\n\n    return (\n        <div className={`ui message close ${typelist[type]}`} onClick={()=>setMessage()}>\n        {text}\n        <i className=\"icon close\"></i>\n     </div>\n    )\n}\nexport default Message","import React, { useState } from 'react'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport   { Editor, SearchCursor } from 'codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/lib/codemirror'\nimport 'codemirror/theme/lesser-dark.css'\nimport 'codemirror/mode/groovy/groovy'\nimport 'codemirror/addon/search/searchcursor'\nimport HelpSidebar from './HelpSidebar'\nimport Footer from './Footer'\nimport Message from './Message'\nimport { RepoDictType } from '../types'\n\n\ntype CompProps={\n    baseurl:string\n    selectedPage:string\n    blocklist:[RepoDictType]\n}\n\nconst CodeEditor:React.FC<CompProps>=({baseurl,selectedPage, blocklist})=>{\n    const[code, setCode]=useState(\"\")\n    const[ce, setCE]=useState<Editor>()\n    const[message, setMessage]= useState<{type:string, text:string}>()\n    \n    let initcode = `/*Build testscript scaffolding with blocks first\n    \n    - Select first Block Script\n\n    - second block setupSpec\n\n    - third cleanupSpec\n\n    - fourth few of Steps\n\n    - five click button Mark to select placeholder\n\nand single Commands from Reposotory !!!*/`\n\n    let blockoptions = Object.keys(blocklist).map((key)=>{\n      return (\n        <option className=\"item\" key={key} value={key} style={{color:'black'}}>\n          {key.toUpperCase()}\n        </option>\n      )\n    })\n    const setCodeetitor=(edit:Editor)=>{\n      setCE(edit) \n      \n    }\n    const insertCodeBlock = (e:React.ChangeEvent<HTMLSelectElement>|React.MouseEvent<HTMLButtonElement>, command?:string)=>{\n        let bname=\"\"\n        if(command)bname=command\n        else bname= e.currentTarget.value\n        e.currentTarget.value=\"\" // setzt die Auswahl im Blocks Select zurück\n        if(!ce){setMessage({type:\"error\", text:\"CodeEditor steht nicht zur Verfügung\"}); return;}\n        if(blocklist[bname]){\n            let block= blocklist[bname]\n            switch (bname) {\n                case \"script\":\n                    ce.setValue(\"\")\n                    ce.setCursor({line:0, ch:0})\n                    ce.setValue(block)\n                    setTimeout(() => { ce.setCursor({line:12, ch:1}) }, 200);\n                    break;\n                case \"setupspec\":\n                    ce.replaceRange(block, ce.getCursor())\n                    setTimeout(() => { ce.setCursor({line:20, ch:1}) }, 200);\n                    break;\n                case \"cleanupspec\":\n                    ce.replaceRange(block, ce.getCursor())\n                    setTimeout(() => { ce.setCursor({line:28, ch:1}) }, 200);\n                    break;\n                case \"step\":\n                    ce.replaceRange(block, ce.getCursor())\n                    break;\n                default:\n                    ce.replaceRange(block, ce.getCursor())\n                    break;\n            }\n        }\n        else{\n          setMessage({type:\"warn\", text:`Block ${bname} nicht bekannt`})\n        }\n    }\n\n    let dropCodeLine = (editor:Editor, e:React.DragEvent<HTMLElement>)=>{\n        let newline = e.dataTransfer.getData('codezeile')\n        editor.focus()\n        editor.setCursor(editor.coordsChar({left:e.pageX, top:e.pageY}))\n        editor.replaceRange(newline, editor.getCursor())\n        document.getElementById(\"draggedobj\")?.remove()\n      }\n\n    let actionScriptPane = (e:React.MouseEvent<HTMLButtonElement>, action:string)=>{\n        if(!ce){ setMessage({type:\"error\", text:\"CodeEditor steht nicht zur Verfügung\"}); return }\n        switch (action) {\n            case \"clear\": ce.setValue(initcode); break;\n            case \"undo\": ce.execCommand('undo'); break;\n            case \"repo\": ce.execCommand('redo'); break;\n            case \"mark\":\n                let pattern = new RegExp(\"(CLASSNAME|GIVEN|STEPNAME|EXPECT|#Given String#|#Expect String#)\")\n                let matches:SearchCursor = ce.getSearchCursor(pattern)\n                while(matches.findNext()){\n                    ce.markText(matches.from(), matches.to(),{className:'CodeMirror-selected'}) \n                }\n                break;\n            case \"format\":\n              let range = { from: ce.getCursor(\"true\"), to: ce.getCursor() };\n              let selection:string = ce.getSelection()\n              if(range.from.line === range.to.line && range.from.ch !== range.to.ch) ce.indentLine(range.from.line)\n              else {\n                if(selection.length ===0){ce.execCommand(\"selectAll\")}\n                ce.indentSelection(\"smart\")  \n              }\n              break;\n            default: setMessage({type:\"error\", text:`Action ${action} nicht bekannt`});\n            break;\n        }\n    }\n    \n    return (\n        <div className=\"kw-columncontainer\">\n          {/*############# TOP MENU #####################*/}\n          <header>\n            <div className=\"ui secondary inverted menu row\" style={{marginLeft:'1em', marginTop:'5px', alignItems:'center'}}>\n              <div className=\"ui item\">\n              <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => insertCodeBlock(e, \"step\") } >\n                  <i className=\"icon paw\"></i>\n                  <span> Step</span>\n                </button>\n              </div>\n              <select className=\"tfw-dropdown dropdown item\" onChange={(e: React.ChangeEvent<HTMLSelectElement>) => insertCodeBlock(e) } >\n                <option className=\"item\" value=\"\">Blocks</option>\n                {blockoptions}\n              </select>\n              <div className=\"ui item\">\n                <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"clear\") } >\n                  <i className=\"icon file outline\"></i>\n                  <span> New</span>\n                </button>\n                <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"undo\") } >\n                  <i className=\"icon undo\"></i>\n                  <span> Undo</span>\n                </button>\n                <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"redo\") } >\n                  <i className=\"icon redo\"></i>\n                  <span> Redo</span>\n                </button>\n                <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"mark\") } >\n                  <i className=\"icon eye\"></i>\n                  <span> Mark</span>\n                </button>\n                <button className=\"ui basic inverted icon button\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"format\") } >\n                  <i className=\"icon play\"></i>\n                  <span className=\"ui content\"> Format</span>\n                </button>\n\n              </div>\n              <div className=\"ui item\">\n                <button className=\"ui basic inverted icon button disabled\" onClick={(e: React.MouseEvent<HTMLButtonElement>) => actionScriptPane(e, \"run\") } >\n                  <i className=\"icon play\"></i>\n                  <span className=\"ui content\"> Run</span>\n                </button>\n              </div>\n              \n              <div id=\"dragcontainer\" style={{width:'0px',height:'0px'}}></div>\n            </div>\n            {\n                message && message.text\n                ? <Message type={message.type} text={message.text} setMessage={setMessage} />\n                : null\n            }\n          </header>\n  {/*################## EDITOR ########################*/}\n          <main className=\"kw-rowcontainer\">\n            <div className=\"kw-block\">\n              <CodeMirror\n                \n                editorDidMount={(editor: Editor) => { setCodeetitor(editor);  }}\n                value={code}\n                className=\"react-codemirror2 code-mirror-wrapper\"\n                options={{\n                  mode: \"text/x-groovy\",\n                  theme: \"lesser-dark\",\n                  autofocus: true,\n                  lineNumbers: true,\n                  lineWrapping: true,\n                  dragDrop: true,\n                  showCursorWhenSelecting: true,\n                }}\n                onChange={(editor, data, value) => {}}\n                onBeforeChange={(editor, data, value) => { setCode(value); }}\n                onDrop={dropCodeLine}\n                onDragOver={(editor: Editor, evt: React.DragEvent) => evt.preventDefault() }\n                autoScroll={true}\n              />\n            </div>\n            {/*################### HELP SIDEBAR ##########################*/}\n            <div className=\"kw-sidebar\" style={{width:\"30%\"}}>\n              <HelpSidebar selectedPage={selectedPage} />\n            </div>\n          </main>\n\n  {/*################## FOOTER ########################*/}\n          <Footer baseurl={baseurl} />\n        </div>\n    );\n}\nexport default CodeEditor","import React, { useState } from 'react';\nimport axios from 'axios'\nimport RepoSidebar from './RepoSidebar'\nimport CodeEditor from './CodeEditor'\nimport {RepoDictType, RepositoryType} from '../types'\n\nconst App:React.FC=()=> {\n\n  const [selectedRepo, setSelectedRepo] = React.useState(\"\");\n  const [repository, setRepository]= useState<RepositoryType|undefined>()\n  const [selectedRepoElement, setSelectedRepoElement]=useState(\"\")\n\n  const repolist = [\n    { key: 1, value: \"shop\", text: \"Kiwi-Shop Repository\" },\n    { key: 2, value: \"factory\", text: \"Kiwi-Factory Repository\" },\n  ];\n\n  let repoOptionList = repolist.map((opt) => {\n    return <option className=\"item\" key={opt.key} value={opt.value}>{opt.text}</option>\n  });\n\n  const loadLocalRepository = (reponame: string) => {\n    setSelectedRepo(reponame);\n    axios.get<RepositoryType>(\"./repo.json\").then((response) => {\n      let jsonresponse = response.data\n      axios.get(\"./repo.xml\", {headers:{\"Content-Type\":\"application/xml; charset=utf-8\"}}).then((response) => {\n      \n        let blocks:[RepoDictType]=Object.assign([])\n        let commands:[RepoDictType]=Object.assign([])\n        let parser = new DOMParser()\n        let xml:Document = parser.parseFromString(response.data, 'application/xml')\n        let blocklist = xml.getElementsByTagName('block')\n        Array.from(blocklist).map((b)=>{\n          blocks[b.id]=b.textContent\n          return null\n        })\n        let commandlist = xml.getElementsByTagName('command')\n        Array.from(commandlist).map((c)=>{\n          commands[c.id]=c.textContent\n          return null\n        })\n        let updatedRepository = {...jsonresponse, blocks, commands}\n        // zur validierung können libs : ajv oder/und typescript-json-validator verwendet werden.\n        // aktuell nicht notwendig weil, repo.json ist stabil und gesichert.\n        setRepository(updatedRepository);\n      })\n      \n    })\n  };\n\n  return (\n    <div className=\"kw-rowcontainer\">\n      {/*########################Repository Sidebar ####################*/}\n      <div className=\"kw-sidebar\">\n        <div className=\"ui vertical menu kw-vmenu\">\n          <div className=\"ui item\">\n            <img src=\"/kiwi-logo.png\" alt=\"kiwicon-logo\"/>\n          </div>\n          <div className=\"ui item\">\n          <select className=\"ui dropdown fluid\"  value={selectedRepo} onChange={(e)=>loadLocalRepository(e.target.value)} required>\n            <option className=\"item active\" value=\"\" disabled> Please Select Repository</option>\n            {repoOptionList}\n          </select>\n          </div>\n\n        {repository \n          ?<RepoSidebar repo={repository} setSelectedElement={setSelectedRepoElement} />\n          :(\n            <>\n            <div className=\"ui item\">\n                <div className=\"ui center aligned icon header\"> <i className=\"circular braille icon\"></i> Please select repository </div>\n            </div>\n            \n          </>\n          )\n        }\n      </div>\n      </div> \n        {/*############################ CODE EDITOR ##########################*/}\n        {repository && repository.blocks\n          ?<CodeEditor baseurl={repository.basic[\"baseurl\"]} selectedPage={selectedRepoElement} blocklist={repository.blocks} />\n          :<h2 className=\"ui center aligned inverted icon header\"> <i className=\"circular braille icon\"></i> Please select repository </h2>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'semantic-ui-css/semantic.min'\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}